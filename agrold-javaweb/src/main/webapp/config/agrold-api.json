{
    "swagger": "2.0",
    "info": {
        "description": "This page provides information about the RESTful API (version 1.0) of AgroLD.",
        "version": "1.0",
        "title": "AgroLD API 1.0 Interactive Documentation",
        "termsOfService": "http://www.agrold.org",
        "contact": {
            "email": "agrolinkeddata@gmail.com"
        },
        "license": {
            "name": "IBC Montpellier",
            "url": "http://agrold.southgreen.fr/agrold/about.jsp"
        }
    },
    "host": "localhost:8080/agrold-dev",
    "basePath": "/api",
    "tags": [
        {
            "name": "ontologies",
            "description": "Services over ontologies used in AgroLD",
            "externalDocs": {
                "description": "Find out more",
                "url": "http://www.agrold.org"
            }
        },
        {
            "name": "general",
            "description": "General Services",
            "externalDocs": {
                "description": "Find out more",
                "url": "http://www.agrold.org"
            }
        },
        {
            "name": "gene",
            "description": "Services over genes",
            "externalDocs": {
                "description": "Find out more",
                "url": "http://www.agrold.org"
            }
        },
        {
            "name": "protein",
            "description": "Services over proteins",
            "externalDocs": {
                "description": "Find out more",
                "url": "http://www.agrold.org"
            }
        },
        {
            "name": "qtl",
            "description": "Services over QTLs",
            "externalDocs": {
                "description": "Find out more",
                "url": "http://www.agrold.org"
            }
        },
        {
            "name": "pathway",
            "description": "Services over pathways",
            "externalDocs": {
                "description": "Find out more",
                "url": "http://www.agrold.org"
            }
        }
    ],
    "schemes": [
        "http"
    ],
    "paths": {
        "/ontologies/terms/byKeyword{format}": {
            "get": {
                "tags": [
                    "ontologies"
                ],
                "summary": "Returns all the IDs corresponding to an ontological term",
                "description": "",
                "operationId": "getOntologyTermsByKeyWord",
                "produces": ["text/html", "application/sparql-results+json", "application/json", "application/sparql-results+xml", "text/tab-separated-values", "text/csv", "rdf/xml", "text/turtle", "text/plain"],
                "parameters": [
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "The keyword (e.g. homoaconitate)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number (>= 0) of the page of the result set to display (0 = the first page by default)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "size of a page of the result set. If = 0 then all results will be displayed. Default value: 10.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".jsonld",
                            ".xml",
                            ".tsv",
                            ".csv",
                            ".rdf",
                            ".html",
                            ".ttl", ".n3"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/ontologies/ids/byterm{format}": {
            "get": {
                "tags": [
                    "ontologies"
                ],
                "summary": "Returns all the IDs corresponding to an ontological term",
                "description": "",
                "operationId": "getIdByOntoTerm",
                "produces": ["text/html", "application/sparql-results+json", "application/json", "application/sparql-results+xml", "text/tab-separated-values", "text/csv", "rdf/xml", "text/turtle", "text/plain"],
                "parameters": [
                    {
                        "name": "ontoTerm",
                        "in": "query",
                        "description": "The ontological term (e.g. homoaconitate hydratase activity)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number (>= 0) of the page of the result set to display (0 = the first page by default)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "size of a page of the result set. If = 0 then all results will be displayed. Default value: 10.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".jsonld",
                            ".xml",
                            ".tsv",
                            ".csv",
                            ".rdf",
                            ".html",
                            ".ttl", ".n3"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/ontologies/terms/byId{format}": {
            "get": {
                "tags": [
                    "ontologies"
                ],
                "summary": "Returns the name of an ontological element corresponding to its given ID",
                "description": "",
                "operationId": "getOntoTermById",
                "produces": ["text/html", "application/sparql-results+json", "application/json", "application/sparql-results+xml", "text/tab-separated-values", "text/csv", "rdf/xml", "text/turtle", "text/plain"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The id (e.g. GO:0003824)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number (>= 0) of the page of the result set to display (0 = the first page by default)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "size of a page of the result set. If = 0 then all results will be displayed. Default value: 10.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".jsonld",
                            ".xml",
                            ".tsv",
                            ".csv",
                            ".rdf",
                            ".html",
                            ".ttl", ".n3"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/ontologies/terms/ancestors/byId{format}": {
            "get": {
                "tags": [
                    "ontologies"
                ],
                "summary": "Returns all the IDs corresponding to an ontological term",
                "description": "",
                "operationId": "getAncestorById",
                "produces": ["text/html", "application/sparql-results+json", "application/json", "application/sparql-results+xml", "text/tab-separated-values", "text/csv", "rdf/xml", "text/turtle", "text/plain"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The ID of an ontological resource (e.g. GO:0004409 or G0:0016836)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "level",
                        "in": "query",
                        "description": "The level of the ancestor (e.g. the level of the direct parent is 1)",
                        "required": true,
                        "type": "integer",
                        "minimum": 1
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number (>= 0) of the page of the result set to display (0 = the first page by default)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "size of a page of the result set. If = 0 then all results will be displayed. Default value: 10.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".jsonld",
                            ".xml",
                            ".tsv",
                            ".csv",
                            ".rdf",
                            ".html",
                            ".ttl", ".n3"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/ontologies/terms/parents/byId{format}": {
            "get": {
                "tags": [
                    "ontologies"
                ],
                "summary": "Returns the parents of an ontological element given its id",
                "description": "",
                "operationId": "getParentById",
                "produces": ["text/html", "application/sparql-results+json", "application/json", "application/sparql-results+xml", "text/tab-separated-values", "text/csv", "rdf/xml", "text/turtle", "text/plain"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The ID of an ontological resource (e.g. GO:0004409)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number (>= 0) of the page of the result set to display (0 = the first page by default)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "size of a page of the result set. If = 0 then all results will be displayed. Default value: 10.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".jsonld",
                            ".xml",
                            ".tsv",
                            ".csv",
                            ".rdf",
                            ".html",
                            ".ttl", ".n3"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/ontologies/terms/descendants/byId{format}": {
            "get": {
                "tags": [
                    "ontologies"
                ],
                "summary": "Returns the descendents of an ontological element given its id",
                "description": "",
                "operationId": "getDescendentById",
                "produces": ["text/html", "application/sparql-results+json", "application/json", "application/sparql-results+xml", "text/tab-separated-values", "text/csv", "rdf/xml", "text/turtle", "text/plain"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The ID of an ontological resource (e.g. GO:0003824)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "level",
                        "in": "query",
                        "description": "The level of the descendent (e.g. the level of the direct children is 1)",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number (>= 0) of the page of the result set to display (0 = the first page by default)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "size of a page of the result set. If = 0 then all results will be displayed. Default value: 10.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".jsonld",
                            ".xml",
                            ".tsv",
                            ".csv",
                            ".rdf",
                            ".html",
                            ".ttl", ".n3"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/ontologies/terms/children/byId{format}": {
            "get": {
                "tags": [
                    "ontologies"
                ],
                "summary": "Returns the children of an ontological element given its id",
                "description": "",
                "operationId": "getChildrenById",
                "produces": ["text/html", "application/sparql-results+json", "application/json", "application/sparql-results+xml", "text/tab-separated-values", "text/csv", "rdf/xml", "text/turtle", "text/plain"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "The ID of an ontological resource (e.g. GO:0003824)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number (>= 0) of the page of the result set to display (0 = the first page by default)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "size of a page of the result set. If = 0 then all results will be displayed. Default value: 10.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".jsonld",
                            ".xml",
                            ".tsv",
                            ".csv",
                            ".rdf",
                            ".html",
                            ".ttl", ".n3"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/ontologies/terms/associatedWithQtl{format}": {
            "get": {
                "tags": [
                    "ontologies"
                ],
                "summary": "Get the ontological terms associated with the QTL, and the association",
                "description": "",
                "operationId": "getOntoTermsAssociatedWithQtl",
                "produces": ["text/html", "application/sparql-results+json", "application/json", "application/sparql-results+xml", "text/tab-separated-values", "text/csv", "rdf/xml", "text/turtle", "text/plain"],
                "parameters": [
                    {
                        "name": "qtlId",
                        "in": "query",
                        "description": "The id of the QTL (e.g. AQA001)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number (>= 0) of the page of the result set to display (0 = the first page by default)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "size of a page of the result set. If = 0 then all results will be displayed. Default value: 10.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".jsonld",
                            ".xml",
                            ".tsv",
                            ".csv",
                            ".rdf",
                            ".html",
                            ".ttl", ".n3"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        },
        "/ontologies/terms/associatedWithGene{format}": {
            "get": {
                "tags": [
                    "ontologies"
                ],
                "summary": "Get the ontological annotation associated with the Gene",
                "description": "",
                "operationId": "getOntoTermsAssociatedWithGene",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "geneId",
                        "in": "query",
                        "description": "The id of the gene (e.g. OS02G0803700, OS06G0127000, AT1G09040, AT5G38250)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        },
        "/ontologies/terms/associatedWithProtein{format}": {
            "get": {
                "tags": [
                    "ontologies"
                ],
                "summary": "Get the ontological terms associated with the Protein, and the association",
                "description": "",
                "operationId": "getOntoTermsAssociatedWithProtein",
                "produces": ["text/html", "application/sparql-results+json", "application/json", "application/sparql-results+xml", "text/tab-separated-values", "text/csv", "rdf/xml", "text/turtle", "text/plain"],
                "parameters": [
                    {
                        "name": "proteinId",
                        "in": "query",
                        "description": "The id of the protein (e.g. A0A060D1L3)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number (>= 0) of the page of the result set to display (0 = the first page by default)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "size of a page of the result set. If = 0 then all results will be displayed. Default value: 10.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".jsonld",
                            ".xml",
                            ".tsv",
                            ".csv",
                            ".rdf",
                            ".html",
                            ".ttl", ".n3"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        },
        "/describe{format}": {
            "get": {
                "tags": [
                    "general"
                ],
                "summary": "Retrieve complete description of a resource from AgroLD in JSON format",
                "description": "",
                "operationId": "getDescription",
                "produces": ["text/html", "application/sparql-results+json", "application/json", "application/sparql-results+xml", "text/tab-separated-values", "text/csv", "rdf/xml", "text/turtle", "text/plain"],
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "description": "URI of the resource (e.g. http://www.southgreen.fr/agrold/ricecyc.pathway/FERMENTATION-PWY)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number (>= 0) of the page of the result set to display (0 = the first page by default)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "size of a page of the result set. If = 0 then all results will be displayed. Default value: 10.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".jsonld",
                            ".xml",
                            ".tsv",
                            ".csv",
                            ".rdf",
                            ".html",
                            ".ttl", ".n3"
                        ]
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/graphs{format}": {
            "get": {
                "tags": [
                    "general"
                ],
                "summary": "list all the graphs of AgroLD",
                "description": "",
                "operationId": "listgraphs",
                "produces": ["text/html", "application/sparql-results+json", "application/json", "application/sparql-results+xml", "text/tab-separated-values", "text/csv", "rdf/xml", "text/turtle", "text/plain"],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number (>= 0) of the page of the result set to display (0 = the first page by default)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "size of a page of the result set. If = 0 then all results will be displayed. Default value: 10.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".jsonld",
                            ".xml",
                            ".tsv",
                            ".csv",
                            ".rdf",
                            ".html",
                            ".ttl", ".n3"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "Invalid HTTP method"
                    }
                }
            }
        },
        "/sparql": {
            "get": {
                "tags": [
                    "general"
                ],
                "summary": "Run a sparql query",
                "description": "",
                "operationId": "sparql",
                "produces": ["text/csv", "application/json", "text/plain", "text/turtle", "application/sparql-results+xml", "application/rdf+xml", "text/tab-separated-values", "application/sparql-results+json"],
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "a sparql query (e.g. select distinct ?Concept where {[] a ?Concept} LIMIT 5 , Describe &lt;http://purl.obolibrary.org/obo/TO_0000040 &gt;)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "text/csv", "text/html", "application/json", "text/plain", "text/turtle", "application/sparql-results+xml", "application/rdf+xml", "text/tab-separated-values", "application/sparql-results+json",
                            "XML"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "Invalid HTTP method"
                    }
                }
            }
        },
        "/predicates{format}": {
            "get": {
                "tags": [
                    "general"
                ],
                "summary": "Retrieve complete URI of all predicates used in AgroLD in JSON",
                "description": "",
                "operationId": "getGraphPredicates",
                "produces": ["text/html", "application/sparql-results+json", "application/json", "application/sparql-results+xml", "text/tab-separated-values", "text/csv", "rdf/xml", "text/turtle", "text/plain"],
                "parameters": [
                    {
                        "name": "graphLocalName",
                        "in": "query",
                        "description": "The local name of the graph in the namespace http://www.southgreen.fr/agrold/ of AgroLD (e.g. gramene.genes)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "so",
                            "go",
                            "eco",
                            "eo",
                            "pato",
                            "po",
                            "to",
                            "ncbitaxon",
                            "gramene.genes",
                            "uniprot.plants",
                            "protein.annotations",
                            "orygenesdb.o.s.indica",
                            "orygenesdb.o.s.thaliana",
                            "orygenesdb.o.s.japonica",
                            "greenphyldb",
                            "topgene",
                            "qtl.annotations",
                            "otl",
                            "gramene.cyc",
                            "gramene.qtl"
                        ]
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number (>= 0) of the page of the result set to display (0 = the first page by default)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "size of a page of the result set",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".jsonld",
                            ".xml",
                            ".tsv",
                            ".csv",
                            ".rdf",
                            ".html",
                            ".ttl", ".n3"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/qtls{format}": {
            "get": {
                "tags": [
                    "qtl"
                ],
                "summary": "Retrieve complete URI and description of all QTLs from AgroLD",
                "description": "",
                "operationId": "getQtls",
                "produces": ["text/html", "application/sparql-results+json", "application/json", "application/sparql-results+xml", "text/tab-separated-values", "text/csv", "rdf/xml", "text/turtle", "text/plain"],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number (>= 0) of the page of the result set to display (0 = the first page by default)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "size of a page of the result set. If = 0 then all results will be displayed. Default value: 10.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".jsonld",
                            ".xml",
                            ".tsv",
                            ".csv",
                            ".rdf",
                            ".html",
                            ".ttl", ".n3"
                        ]
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/qtls/byKeyword{format}": {
            "get": {
                "tags": [
                    "qtl"
                ],
                "summary": "Retrieve QTLs with URI or name or description containing the given keyword",
                "description": "",
                "operationId": "getQtlsByKeyWord",
                "produces": ["text/html", "application/sparql-results+json", "application/json", "application/sparql-results+xml", "text/tab-separated-values", "text/csv", "rdf/xml", "text/turtle", "text/plain"],
                "parameters": [
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "The keyword to find (e.g. BNL6.32, flw4)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number (>= 0) of the page of the result set to display (0 = the first page by default)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "size of a page of the result set. If = 0 then all results will be displayed. Default value: 10.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".jsonld",
                            ".xml",
                            ".tsv",
                            ".csv",
                            ".rdf",
                            ".html",
                            ".ttl", ".n3"
                        ]
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/qtls/id/associatedWithOntoId{format}": {
            "get": {
                "tags": [
                    "qtl"
                ],
                "summary": "Get ids of QTLs associated with an ontological Id",
                "description": "",
                "operationId": "getQtlsIdAssociatedWithOntoId",
                "produces": ["text/html", "application/sparql-results+json", "application/json", "application/sparql-results+xml", "text/tab-separated-values", "text/csv", "rdf/xml", "text/turtle", "text/plain"],
                "parameters": [
                    {
                        "name": "ontoId",
                        "in": "query",
                        "description": "The id of the ontological element (e.g. TO:0000040, TO:0000207, TO_0000370)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number (>= 0) of the page of the result set to display (0 = the first page by default)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "size of a page of the result set. If = 0 then all results will be displayed. Default value: 10.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".jsonld",
                            ".xml",
                            ".tsv",
                            ".csv",
                            ".rdf",
                            ".html",
                            ".ttl", ".n3"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        },
        "/qtls/associatedWithProteinId{format}": {
            "get": {
                "tags": [
                    "qtl"
                ],
                "summary": "Get the list of QTLs associated with an protein Id",
                "description": "",
                "operationId": "getQtlsAssociatedWithProteinId",
                "produces": ["text/html", "application/sparql-results+json", "application/json", "application/sparql-results+xml", "text/tab-separated-values", "text/csv", "rdf/xml", "text/turtle", "text/plain"],
                "parameters": [
                    {
                        "name": "proteinId",
                        "in": "query",
                        "description": "The id of the protein (e.g. Q9LL45)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number (>= 0) of the page of the result set to display (0 = the first page by default)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "size of a page of the result set. If = 0 then all results will be displayed. Default value: 10.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".jsonld",
                            ".xml",
                            ".tsv",
                            ".csv",
                            ".rdf",
                            ".html",
                            ".ttl", ".n3"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        },
        "/proteins{format}": {
            "get": {
                "tags": [
                    "protein"
                ],
                "summary": "Retrieve complete URI and description of all proteins from AgroLD in JSON format",
                "description": "",
                "operationId": "getProteins",
                "produces": ["text/html", "application/sparql-results+json", "application/json", "application/sparql-results+xml", "text/tab-separated-values", "text/csv", "rdf/xml", "text/turtle", "text/plain"],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number (>= 0) of the page of the result set to display (0 = the first page by default)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "size of a page of the result set. If = 0 then all results will be displayed. Default value: 10.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".jsonld",
                            ".xml",
                            ".tsv",
                            ".csv",
                            ".rdf",
                            ".html",
                            ".ttl", ".n3"
                        ]
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/proteins/byKeyword{format}": {
            "get": {
                "tags": [
                    "protein"
                ],
                "summary": "Retrieve proteins with URI or name or description containing the given keyword",
                "description": "",
                "operationId": "getProteinsByKeyWord",
                "produces": ["text/html", "application/sparql-results+json", "application/json", "application/sparql-results+xml", "text/tab-separated-values", "text/csv", "rdf/xml", "text/turtle", "text/plain"],
                "parameters": [
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "The keyword to find (e.g. Putative, tbp1, leaf)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number (>= 0) of the page of the result set to display (0 = the first page by default)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "size of a page of the result set. If = 0 then all results will be displayed. Default value: 10.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".jsonld",
                            ".xml",
                            ".tsv",
                            ".csv",
                            ".rdf",
                            ".html",
                            ".ttl", ".n3"
                        ]
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/proteins/id/associatedWithOntoId{format}": {
            "get": {
                "tags": [
                    "protein"
                ],
                "summary": "Get ids of proteins associated with an ontological Id",
                "description": "",
                "operationId": "getProteinIdAssociatedWithOntoId",
                "produces": ["text/html", "application/sparql-results+json", "application/json", "application/sparql-results+xml", "text/tab-separated-values", "text/csv", "rdf/xml", "text/turtle", "text/plain"],
                "parameters": [
                    {
                        "name": "ontoId",
                        "in": "query",
                        "description": "The id of the ontological element (e.g. GO:0003824)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number (>= 0) of the page of the result set to display (0 = the first page by default)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "size of a page of the result set. If = 0 then all results will be displayed. Default value: 10.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".jsonld",
                            ".xml",
                            ".tsv",
                            ".csv",
                            ".rdf",
                            ".html",
                            ".ttl", ".n3"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        },
        "/proteins/associatedWithQTL{format}": {
            "get": {
                "tags": [
                    "protein"
                ],
                "summary": "Get URIs, ids, and name of proteins associated with a QTL",
                "description": "",
                "operationId": "getProteinsAssociatedWithQtl",
                "produces": ["text/html", "application/sparql-results+json", "application/json", "application/sparql-results+xml", "text/tab-separated-values", "text/csv", "rdf/xml", "text/turtle", "text/plain"],
                "parameters": [
                    {
                        "name": "qtlId",
                        "in": "query",
                        "description": "The id of the QTL (e.g. AQAA003)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number (>= 0) of the page of the result set to display (0 = the first page by default)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "size of a page of the result set. If = 0 then all results will be displayed. Default value: 10.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".jsonld",
                            ".xml",
                            ".tsv",
                            ".csv",
                            ".rdf",
                            ".html",
                            ".ttl", ".n3"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        },
        "/proteins/EncodedByGene{format}": {
            "get": {
                "tags": [
                    "protein"
                ],
                "summary": "Get URIs, ids, and name of proteins encoded by a gene given its ID",
                "description": "",
                "operationId": "getProteinsEncodedByGene",
                "produces": ["text/html", "application/sparql-results+json", "application/json", "application/sparql-results+xml", "text/tab-separated-values", "text/csv", "rdf/xml", "text/turtle", "text/plain"],
                "parameters": [
                    {
                        "name": "geneId",
                        "in": "query",
                        "description": "The id of the gene (e.g. BAE47665, AT2G19710, AT4G35730)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number (>= 0) of the page of the result set to display (0 = the first page by default)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "size of a page of the result set. If = 0 then all results will be displayed. Default value: 10.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".jsonld",
                            ".xml",
                            ".tsv",
                            ".csv",
                            ".rdf",
                            ".html",
                            ".ttl", ".n3"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        },
        "/genes{format}": {
            "get": {
                "tags": [
                    "gene"
                ],
                "summary": "Retrieve complete URI and description of all genes from AgroLD in JSON format",
                "description": "",
                "operationId": "getGenes",
                "produces": ["text/html", "application/sparql-results+json", "application/json", "application/sparql-results+xml", "text/tab-separated-values", "text/csv", "rdf/xml", "text/turtle", "text/plain"],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number (>= 0) of the page of the result set to display (0 = the first page by default)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "size of a page of the result set. If = 0 then all results will be displayed. Default value: 10.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".jsonld",
                            ".xml",
                            ".tsv",
                            ".csv",
                            ".rdf",
                            ".html",
                            ".ttl", ".n3"
                        ]
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/genes/publications/byId{format}": {
            "get": {
                "tags": [
                    "gene"
                ],
                "summary": "Get publications of a gene",
                "description": "",
                "operationId": "getPublicationsOfGeneById",
                "produces": ["text/html", "application/sparql-results+json", "application/json", "application/sparql-results+xml", "text/tab-separated-values", "text/csv", "rdf/xml", "text/turtle", "text/plain"],
                "parameters": [
                    {
                        "name": "geneId",
                        "in": "query",
                        "description": "The ID of the gene (e.g. Os05t0125000-01)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number (>= 0) of the page of the result set to display (0 = the first page by default)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "size of a page of the result set. If = 0 then all results will be displayed. Default value: 10.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".jsonld",
                            ".xml",
                            ".tsv",
                            ".csv",
                            ".rdf",
                            ".html",
                            ".ttl", ".n3"
                        ]
                    }                
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/genes/byKeyword{format}": {
            "get": {
                "tags": [
                    "gene"
                ],
                "summary": "Retrieve genes with the URI or the name or the description containing the given keyword",
                "description": "",
                "operationId": "getGenesByKeyWord",
                "produces": ["text/html", "application/sparql-results+json", "application/json", "application/sparql-results+xml", "text/tab-separated-values", "text/csv", "rdf/xml", "text/turtle", "text/plain"],
                "parameters": [
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "The keyword to find (e.g. FRK1, tcp2, stachyose, TBP1, fermentation, rice, oryza)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number (>= 0) of the page of the result set to display (0 = the first page by default)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "size of a page of the result set. If = 0 then all results will be displayed. Default value: 10.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".jsonld",
                            ".xml",
                            ".tsv",
                            ".csv",
                            ".rdf",
                            ".html",
                            ".ttl", ".n3"
                        ]
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/genes/encodingProtein{format}": {
            "get": {
                "tags": [
                    "gene"
                ],
                "summary": "Get URIs, ids, and name of genes encoding a protein given its ID",
                "description": "",
                "operationId": "getGenesEncodingProteins",
                "produces": ["text/html", "application/sparql-results+json", "application/json", "application/sparql-results+xml", "text/tab-separated-values", "text/csv", "rdf/xml", "text/turtle", "text/plain"],
                "parameters": [
                    {
                        "name": "proteinId",
                        "in": "query",
                        "description": "The id of the gene (e.g. Q35985)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number (>= 0) of the page of the result set to display (0 = the first page by default)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "size of a page of the result set. If = 0 then all results will be displayed. Default value: 10.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".jsonld",
                            ".xml",
                            ".tsv",
                            ".csv",
                            ".rdf",
                            ".html",
                            ".ttl", ".n3"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        },
        "/genes/NumberOfCDS{format}": {
            "get": {
                "tags": [
                    "gene"
                ],
                "summary": "Retrieve complete URI and description of all genes from AgroLD in JSON format",
                "description": "",
                "operationId": "getCDSGene",
                "produces": ["text/html", "application/sparql-results+json", "application/json", "application/sparql-results+xml", "text/tab-separated-values", "text/csv", "rdf/xml", "text/turtle", "text/plain"],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number (>= 0) of the page of the result set to display (0 = the first page by default)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "size of a page of the result set. If = 0 then all results will be displayed. Default value: 10.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".jsonld",
                            ".xml",
                            ".tsv",
                            ".csv",
                            ".rdf",
                            ".html",
                            ".ttl", ".n3"
                        ]
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/genes/participatingInPathway{format}": {
            "get": {
                "tags": [
                    "gene"
                ],
                "summary": "Complete URI of gene's description by pathway",
                "description": "",
                "operationId": "getGenesByPathways",
                "produces": ["text/html", "application/sparql-results+json", "application/json", "application/sparql-results+xml", "text/tab-separated-values", "text/csv", "rdf/xml", "text/turtle", "text/plain"],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number (>= 0) of the page of the result set to display (0 = the first page by default)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "size of a page of the result set. If = 0 then all results will be displayed. Default value: 10.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".jsonld",
                            ".xml",
                            ".tsv",
                            ".csv",
                            ".rdf",
                            ".html",
                            ".ttl", ".n3"
                        ]
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/genes/byLocus{format}": {
            "get": {
                "tags": [
                    "gene"
                ],
                "summary": "Give me the genes on chromosome chromosomeNum whose start position is between chromosomeStart and chromosomeEnd",
                "description": "",
                "operationId": "getGenesByLocus",
                "produces": ["text/html", "application/sparql-results+json", "application/json", "application/sparql-results+xml", "text/tab-separated-values", "text/csv", "rdf/xml", "text/turtle", "text/plain"],
                "parameters": [
                    {
                        "name": "chromosomeNum",
                        "in": "query",
                        "description": "The chromosome number (e.g. 01)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "chromosomeStart",
                        "in": "query",
                        "description": "The chromosome starting position (e.g. 10000)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "chromosomeEnd",
                        "in": "query",
                        "description": "The chromosome ending position (e.g. 30000)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number (>= 0) of the page of the result set to display (0 = the first page by default)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "size of a page of the result set. If = 0 then all results will be displayed. Default value: 10.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".jsonld",
                            ".xml",
                            ".tsv",
                            ".csv",
                            ".rdf",
                            ".html",
                            ".ttl", ".n3"
                        ]
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/pathways/inWhichParticipatesGene/byId{format}": {
            "get": {
                "tags": [
                    "pathway"
                ],
                "summary": "Retrieve IRI and name of pathways in which an id-given gene participates",
                "description": "",
                "operationId": "getPathwaysInWhichParticipatesGene",
                "produces": ["text/html", "application/sparql-results+json", "application/json", "application/sparql-results+xml", "text/tab-separated-values", "text/csv", "rdf/xml", "text/turtle", "text/plain"],
                "parameters": [
                    {
                        "name": "geneId",
                        "in": "query",
                        "description": "Id of the gene (e.g. GRMZM2G004534, AT5G18200, Sb01g025590.1, LOC_Os02g35870.1, AT4G01970)",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number (>= 0) of the page of the result set to display (0 = the first page by default)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "size of a page of the result set. If = 0 then all results will be displayed. Default value: 10.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".jsonld",
                            ".xml",
                            ".tsv",
                            ".csv",
                            ".rdf",
                            ".html",
                            ".ttl", ".n3"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/genes/participatingInPathway{format}": {
            "get": {
                "tags": [
                    "gene"
                ],
                "summary": "Get URIs, ids, and name of genes participating in a pathway given its ID",
                "description": "",
                "operationId": "getGenesByPathways",
                "produces": ["text/html", "application/sparql-results+json", "application/json", "application/sparql-results+xml", "text/tab-separated-values", "text/csv", "rdf/xml", "text/turtle", "text/plain"],
                "parameters": [
                    {
                        "name": "pathwayId",
                        "in": "query",
                        "description": "The id (local name) of the pathway (e.g. PWY-5337, FERMENTATION-PWY, TRESYN-PWY, GALACTMETAB-PWY)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number (>= 0) of the page of the result set to display (0 = the first page by default)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "size of a page of the result set. If = 0 then all results will be displayed. Default value: 10.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".jsonld",
                            ".xml",
                            ".tsv",
                            ".csv",
                            ".rdf",
                            ".html",
                            ".ttl", ".n3"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        },
        "/pathways/byKeyword{format}": {
            "get": {
                "tags": [
                    "pathway"
                ],
                "summary": "Retrieve IRI and name of pathways given a keyword",
                "description": "",
                "operationId": "getPathwaysByKeyWord",
                "produces": ["text/html", "application/sparql-results+json", "application/json", "application/sparql-results+xml", "text/tab-separated-values", "text/csv", "rdf/xml", "text/turtle", "text/plain"],
                "parameters": [
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Id of the gene (e.g. fermentation, acetate)",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number (>= 0) of the page of the result set to display (0 = the first page by default)",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "size of a page of the result set. If = 0 then all results will be displayed. Default value: 10.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "format",
                        "in": "path",
                        "description": "format in which the results set will be return (if empty or not supported, JSON is returned by default)",
                        "required": true,
                        "type": "string",
                        "enum": [
                            ".json",
                            ".jsonld",
                            ".xml",
                            ".tsv",
                            ".csv",
                            ".rdf",
                            ".html",
                            ".ttl", ".n3"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ApiResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    }
}